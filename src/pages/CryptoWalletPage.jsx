import React, { useState, useEffect } from 'react'
import { useApplication } from '../context/ApplicationContext'
import WalletManager from '../components/WalletManager'
import StablecoinBalance from '../components/StablecoinBalance'
import LoanDisbursement from '../components/LoanDisbursement'

const CryptoWalletPage = () => {
  const { currentApplication, updateApplicationStatus } = useApplication()
  const [walletAddress, setWalletAddress] = useState('')
  const [selectedLoan, setSelectedLoan] = useState(null)
  const [phoneNumber, setPhoneNumber] = useState('')
  const [isAuthenticated, setIsAuthenticated] = useState(false)

  const handleWalletConnected = (address) => {
    setWalletAddress(address)
    setIsAuthenticated(!!address)
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—è–≤–∫—É —Å –∞–¥—Ä–µ—Å–æ–º –∫–æ—à–µ–ª—å–∫–∞
    if (currentApplication && currentApplication.status === 'APPROVED') {
      updateApplicationStatus(currentApplication.phoneNumber, 'APPROVED', '–ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω')
    }
  }

  const handleLoanDisbursement = async (loanAmount) => {
    // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    if (currentApplication) {
      await updateApplicationStatus(currentApplication.phoneNumber, 'DISBURSED', '–°—Ä–µ–¥—Å—Ç–≤–∞ –≤—ã–¥–∞–Ω—ã –Ω–∞ –∫–æ—à–µ–ª–µ–∫')
    }
  }

  const handleWalletCreated = (address) => {
    setWalletAddress(address)
    setIsAuthenticated(true)
  }

  const handleDisbursementComplete = (txHash, token, amount) => {
    console.log('–ó–∞–π–º –≤—ã–¥–∞–Ω:', { txHash, token, amount })
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–ª–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-12">
        <div className="max-w-4xl mx-auto">
          <div className="text-center mb-8">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              –ö—Ä–∏–ø—Ç–æ –∫–æ—à–µ–ª–µ–∫
            </h1>
            <p className="text-xl text-gray-600">
              –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –∑–∞–π–º—ã
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º */}
            <div className="space-y-6">
              <WalletManager
                onWalletConnected={handleWalletConnected}
                onWalletCreated={handleWalletCreated}
              />
              
              {isAuthenticated && walletAddress && (
                <StablecoinBalance walletAddress={walletAddress} />
              )}
            </div>

            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –≤—ã–¥–∞—á–∞ –∑–∞–π–º–æ–≤ */}
            <div className="space-y-6">
              {isAuthenticated && walletAddress ? (
                <>
                  <div className="bg-white border border-gray-200 rounded-xl p-6 shadow-lg">
                    <h3 className="text-lg font-semibold text-gray-900 mb-4">
                      –ë—ã—Å—Ç—Ä–∞—è –≤—ã–¥–∞—á–∞ –∑–∞–π–º–∞
                    </h3>
                    
                    <div className="space-y-4">
                      <div className="grid grid-cols-2 gap-3">
                        <button
                          onClick={() => setSelectedLoan({ amount: 500, term: 1 })}
                          className={`p-4 border rounded-lg text-center transition-colors ${
                            selectedLoan?.amount === 500
                              ? 'border-blue-500 bg-blue-50 text-blue-700'
                              : 'border-gray-300 hover:border-gray-400'
                          }`}
                        >
                          <div className="font-bold text-lg">$500</div>
                          <div className="text-sm text-gray-600">1 –º–µ—Å—è—Ü</div>
                        </button>
                        
                        <button
                          onClick={() => setSelectedLoan({ amount: 1000, term: 3 })}
                          className={`p-4 border rounded-lg text-center transition-colors ${
                            selectedLoan?.amount === 1000
                              ? 'border-green-500 bg-green-50 text-green-700'
                              : 'border-gray-300 hover:border-gray-400'
                          }`}
                        >
                          <div className="font-bold text-lg">$1,000</div>
                          <div className="text-sm text-gray-600">3 –º–µ—Å—è—Ü–∞</div>
                        </button>
                        
                        <button
                          onClick={() => setSelectedLoan({ amount: 2500, term: 6 })}
                          className={`p-4 border rounded-lg text-center transition-colors ${
                            selectedLoan?.amount === 2500
                              ? 'border-purple-500 bg-purple-50 text-purple-700'
                              : 'border-gray-300 hover:border-gray-400'
                          }`}
                        >
                          <div className="font-bold text-lg">$2,500</div>
                          <div className="text-sm text-gray-600">6 –º–µ—Å—è—Ü–µ–≤</div>
                        </button>
                        
                        <button
                          onClick={() => setSelectedLoan({ amount: 5000, term: 12 })}
                          className={`p-4 border rounded-lg text-center transition-colors ${
                            selectedLoan?.amount === 5000
                              ? 'border-orange-500 bg-orange-50 text-orange-700'
                              : 'border-gray-300 hover:border-gray-400'
                          }`}
                        >
                          <div className="font-bold text-lg">$5,000</div>
                          <div className="text-sm text-gray-600">12 –º–µ—Å—è—Ü–µ–≤</div>
                        </button>
                      </div>
                    </div>
                  </div>
                  
                  {selectedLoan && (
                    <LoanDisbursement
                      loanAmount={selectedLoan.amount}
                      loanTerm={selectedLoan.term}
                      walletAddress={walletAddress}
                      onDisbursementComplete={handleLoanDisbursement}
                    />
                  )}
                </>
              ) : (
                <div className="bg-white border border-gray-200 rounded-xl p-6 shadow-lg">
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                      <svg className="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                      </svg>
                    </div>
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">
                      –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫
                    </h3>
                    <p className="text-gray-600">
                      –î–ª—è –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫—Ä–∏–ø—Ç–æ –∫–æ—à–µ–ª–µ–∫
                    </p>
                  </div>
                </div>
              )}
            </div>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–∞—Ö */}
          <div className="mt-12 bg-white border border-gray-200 rounded-xl p-8 shadow-lg">
            <h2 className="text-2xl font-bold text-gray-900 mb-6 text-center">
              –ß—Ç–æ —Ç–∞–∫–æ–µ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω—ã?
            </h2>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="text-center">
                <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-2xl">üí∞</span>
                </div>
                <h3 className="font-semibold text-gray-900 mb-2">–°—Ç–∞–±–∏–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</h3>
                <p className="text-gray-600 text-sm">
                  –°—Ç–µ–π–±–ª–∫–æ–∏–Ω—ã –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –¥–æ–ª–ª–∞—Ä—É –°–®–ê –∏ –Ω–µ –ø–æ–¥–≤–µ—Ä–∂–µ–Ω—ã –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
                </p>
              </div>
              
              <div className="text-center">
                <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-2xl">‚ö°</span>
                </div>
                <h3 className="font-semibold text-gray-900 mb-2">–ë—ã—Å—Ç—Ä—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã</h3>
                <p className="text-gray-600 text-sm">
                  –ü–µ—Ä–µ–≤–æ–¥—ã —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –∑–∞ –º–∏–Ω—É—Ç—ã, –∞ –Ω–µ –¥–Ω–∏
                </p>
              </div>
              
              <div className="text-center">
                <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-2xl">üåç</span>
                </div>
                <h3 className="font-semibold text-gray-900 mb-2">–ì–ª–æ–±–∞–ª—å–Ω–æ—Å—Ç—å</h3>
                <p className="text-gray-600 text-sm">
                  –†–∞–±–æ—Ç–∞—é—Ç –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∏ –≥—Ä–∞–Ω–∏—Ü
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default CryptoWalletPage
