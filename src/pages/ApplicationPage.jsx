import { useState, useEffect } from 'react'
import { useLocation, useNavigate } from 'react-router-dom'

function ApplicationPage() {
  const location = useLocation()
  const navigate = useNavigate()
  
  const [step, setStep] = useState(1)
  const [loading, setLoading] = useState(false)
  const [selectedProduct, setSelectedProduct] = useState(null)
  const [cryptoWalletCreated, setCryptoWalletCreated] = useState(false)
  const [finalDecision, setFinalDecision] = useState(null) // 'approved' or 'rejected'
  
  const [formData, setFormData] = useState({
    amount: location.state?.amount || 1000,
    termDays: location.state?.term || 30,
    phoneNumber: location.state?.phoneNumber || '+1 (555) 123-4567',
    loanPurpose: location.state?.loanPurpose || '–ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥',
    firstName: '–ò–≤–∞–Ω',
    lastName: '–ò–≤–∞–Ω–æ–≤',
    email: location.state?.email || 'ivan@example.com',
    country: 'US',
    bankName: 'Bank of America',
    accountNumber: '1234567890'
  })

  const [errors, setErrors] = useState({})

  // –î–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–∞—Ö –∏ –±–∞–Ω–∫–∞—Ö
  const countriesAndBanks = {
    'US': {
      name: 'üá∫üá∏ –°–®–ê',
      banks: [
        'Bank of America',
        'JPMorgan Chase',
        'Wells Fargo',
        'Citibank',
        'US Bank',
        'PNC Bank',
        'Capital One',
        'TD Bank',
        'HSBC Bank USA',
        'Regions Bank'
      ]
    },
    'RU': {
      name: 'üá∑üá∫ –†–æ—Å—Å–∏—è',
      banks: [
        '–°–±–µ—Ä–±–∞–Ω–∫',
        '–í–¢–ë',
        '–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫',
        '–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫',
        '–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω–±–∞–Ω–∫',
        '–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫',
        '–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫',
        '–ü–æ—á—Ç–∞ –ë–∞–Ω–∫',
        '–Æ–Ω–∏–ö—Ä–µ–¥–∏—Ç –ë–∞–Ω–∫',
        '–†–æ—Å–±–∞–Ω–∫'
      ]
    },
    'DE': {
      name: 'üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è',
      banks: [
        'Deutsche Bank',
        'Commerzbank',
        'HypoVereinsbank',
        'Sparkasse',
        'Volksbank',
        'Postbank',
        'ING-DiBa',
        'DKB',
        'Consorsbank',
        'Targobank'
      ]
    },
    'GB': {
      name: 'üá¨üáß –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è',
      banks: [
        'HSBC',
        'Barclays',
        'Lloyds Bank',
        'NatWest',
        'Santander UK',
        'Nationwide',
        'TSB',
        'Halifax',
        'First Direct',
        'Metro Bank'
      ]
    },
    'FR': {
      name: 'üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è',
      banks: [
        'BNP Paribas',
        'Cr√©dit Agricole',
        'Soci√©t√© G√©n√©rale',
        'Cr√©dit Mutuel',
        'La Banque Postale',
        'LCL',
        'HSBC France',
        'CIC',
        'Banque Populaire',
        'Cr√©dit du Nord'
      ]
    },
    'IT': {
      name: 'üáÆüáπ –ò—Ç–∞–ª–∏—è',
      banks: [
        'Intesa Sanpaolo',
        'UniCredit',
        'Banco BPM',
        'Banca Popolare di Sondrio',
        'Banca Sella',
        'Monte dei Paschi di Siena',
        'Banca Popolare di Milano',
        'UBI Banca',
        'Banca Nazionale del Lavoro',
        'Credito Emiliano'
      ]
    },
    'ES': {
      name: 'üá™üá∏ –ò—Å–ø–∞–Ω–∏—è',
      banks: [
        'Santander',
        'BBVA',
        'CaixaBank',
        'Bankia',
        'Sabadell',
        'Unicaja',
        'Ibercaja',
        'Abanca',
        'Kutxabank',
        'Liberbank'
      ]
    },
    'CA': {
      name: 'üá®üá¶ –ö–∞–Ω–∞–¥–∞',
      banks: [
        'Royal Bank of Canada',
        'TD Canada Trust',
        'Scotiabank',
        'Bank of Montreal',
        'CIBC',
        'National Bank of Canada',
        'Desjardins',
        'HSBC Bank Canada',
        'Tangerine',
        'PC Financial'
      ]
    },
    'AU': {
      name: 'üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è',
      banks: [
        'Commonwealth Bank',
        'Westpac',
        'ANZ',
        'National Australia Bank',
        'Bendigo Bank',
        'Suncorp Bank',
        'Bank of Queensland',
        'ING Australia',
        'Macquarie Bank',
        'St.George Bank'
      ]
    },
    'JP': {
      name: 'üáØüáµ –Ø–ø–æ–Ω–∏—è',
      banks: [
        'MUFG Bank',
        'Mizuho Bank',
        'Sumitomo Mitsui Banking',
        'Resona Bank',
        'Saitama Resona Bank',
        'Shizuoka Bank',
        'Hokuriku Bank',
        'Chiba Bank',
        'Bank of Yokohama',
        'Shinwa Bank'
      ]
    },
    'CN': {
      name: 'üá®üá≥ –ö–∏—Ç–∞–π',
      banks: [
        'Industrial and Commercial Bank of China',
        'China Construction Bank',
        'Agricultural Bank of China',
        'Bank of China',
        'Bank of Communications',
        'China Merchants Bank',
        'China Minsheng Bank',
        'China Everbright Bank',
        'Ping An Bank',
        'China Citic Bank'
      ]
    },
    'IN': {
      name: 'üáÆüá≥ –ò–Ω–¥–∏—è',
      banks: [
        'State Bank of India',
        'HDFC Bank',
        'ICICI Bank',
        'Axis Bank',
        'Kotak Mahindra Bank',
        'Punjab National Bank',
        'Bank of Baroda',
        'Canara Bank',
        'Union Bank of India',
        'Indian Bank'
      ]
    },
    'BR': {
      name: 'üáßüá∑ –ë—Ä–∞–∑–∏–ª–∏—è',
      banks: [
        'Banco do Brasil',
        'Caixa Econ√¥mica Federal',
        'Bradesco',
        'Ita√∫ Unibanco',
        'Santander Brasil',
        'Banco Safra',
        'Banco Votorantim',
        'Banco Inter',
        'Nubank',
        'Banco Original'
      ]
    }
  }

  const handleChange = (e) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[name]) {
      setErrors(prev => ({ ...prev, [name]: '' }))
    }
  }

  const handleCountryChange = (e) => {
    const countryCode = e.target.value
    setFormData(prev => ({
      ...prev,
      country: countryCode,
      bankName: countriesAndBanks[countryCode]?.banks[0] || ''
    }))
  }

  const validateStep1 = () => {
    // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è –¥–µ–º–æ
    return true
  }

  const handleStep1Submit = async (e) => {
    e.preventDefault()
    
    if (!validateStep1()) {
      return
    }

    setLoading(true)

    try {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        setStep(2)
    } catch (error) {
      setErrors({ submit: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' })
    } finally {
      setLoading(false)
    }
  }

  const handleProductSelect = (product) => {
    setSelectedProduct(product)
    setStep(3) // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞
  }

  const handleCryptoWalletCreated = () => {
    setCryptoWalletCreated(true)
    setStep(4) // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∂–∏–¥–∞–Ω–∏—é —Ä–µ—à–µ–Ω–∏—è
  }

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–Ω—è—Ç–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è
  useEffect(() => {
    if (step === 4) {
    setLoading(true)
      const decisionTimer = setTimeout(() => {
        // –ò–º–∏—Ç–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è: 70% –æ–¥–æ–±—Ä–µ–Ω–æ, 30% –æ—Ç–∫–∞–∑–∞–Ω–æ
        const isApproved = Math.random() < 0.7
        setFinalDecision(isApproved ? 'approved' : 'rejected')
      setLoading(false)
        setStep(5) // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
      }, 5000) // 5 —Å–µ–∫—É–Ω–¥ –Ω–∞ "–ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è"

      return () => clearTimeout(decisionTimer)
    }
  }, [step])

  return (
    <div className="container mx-auto px-4 py-12">
      <div className="max-w-3xl mx-auto">
        <h1 className="text-4xl font-bold text-white text-center mb-8">
          –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–π–º üìù
        </h1>

        {/* Progress bar */}
        <div className="bg-white rounded-lg shadow-lg p-4 mb-8">
          <div className="flex justify-between items-center">
            <div className={`flex items-center ${step >= 1 ? 'text-blue-600' : 'text-gray-400'}`}>
              <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm ${step >= 1 ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}>
                1
              </div>
              <span className="ml-1 font-semibold hidden lg:inline text-xs">–†–µ–∫–≤–∏–∑–∏—Ç—ã</span>
            </div>
            <div className={`flex-1 h-1 mx-2 ${step >= 2 ? 'bg-blue-600' : 'bg-gray-300'}`}></div>
            
            <div className={`flex items-center ${step >= 2 ? 'text-blue-600' : 'text-gray-400'}`}>
              <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm ${step >= 2 ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}>
                2
              </div>
              <span className="ml-1 font-semibold hidden lg:inline text-xs">–ü—Ä–æ–¥—É–∫—Ç—ã</span>
            </div>
            <div className={`flex-1 h-1 mx-2 ${step >= 3 ? 'bg-blue-600' : 'bg-gray-300'}`}></div>
            
            <div className={`flex items-center ${step >= 3 ? 'text-blue-600' : 'text-gray-400'}`}>
              <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm ${step >= 3 ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}>
                3
              </div>
              <span className="ml-1 font-semibold hidden lg:inline text-xs">–ö—Ä–∏–ø—Ç–æ</span>
            </div>
            <div className={`flex-1 h-1 mx-2 ${step >= 4 ? 'bg-blue-600' : 'bg-gray-300'}`}></div>
            
            <div className={`flex items-center ${step >= 4 ? 'text-blue-600' : 'text-gray-400'}`}>
              <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm ${step >= 4 ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}>
                4
              </div>
              <span className="ml-1 font-semibold hidden lg:inline text-xs">–û–∂–∏–¥–∞–Ω–∏–µ</span>
            </div>
            <div className={`flex-1 h-1 mx-2 ${step >= 5 ? 'bg-blue-600' : 'bg-gray-300'}`}></div>
            
            <div className={`flex items-center ${step >= 5 ? 'text-green-600' : 'text-gray-400'}`}>
              <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm ${step >= 5 ? 'bg-green-600 text-white' : 'bg-gray-300'}`}>
                ‚úì
              </div>
              <span className="ml-1 font-semibold hidden lg:inline text-xs">–†–µ—à–µ–Ω–∏–µ</span>
            </div>
          </div>
        </div>

        {/* Step 1: –ê–Ω–∫–µ—Ç–∞ */}
        {step === 1 && (
          <div className="bg-white rounded-2xl shadow-2xl p-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-6">–®–∞–≥ 1: –ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</h2>
            
            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ */}
            <div className="bg-blue-50 rounded-lg p-4 mb-6">
              <h4 className="font-semibold text-blue-800 mb-2">–í–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–π–º–∞:</h4>
              <div className="grid grid-cols-2 gap-4 text-sm">
                <div><span className="font-medium">–°—É–º–º–∞:</span> ${formData.amount}</div>
                <div><span className="font-medium">–°—Ä–æ–∫:</span> {formData.termDays} –¥–Ω–µ–π</div>
                <div><span className="font-medium">–¢–µ–ª–µ—Ñ–æ–Ω:</span> {formData.phoneNumber}</div>
                <div><span className="font-medium">Email:</span> {formData.email}</div>
                <div className="col-span-2"><span className="font-medium">–¶–µ–ª—å:</span> {formData.loanPurpose}</div>
              </div>
            </div>

            <form onSubmit={handleStep1Submit}>
              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-2">
                  –°—Ç—Ä–∞–Ω–∞ *
                </label>
                <select
                  name="country"
                  value={formData.country}
                  onChange={handleCountryChange}
                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.country ? 'border-red-500' : 'border-gray-300'}`}
                  required
                >
                  {Object.entries(countriesAndBanks).map(([code, data]) => (
                    <option key={code} value={code}>
                      {data.name}
                    </option>
                  ))}
                </select>
                {errors.country && <p className="text-red-500 text-sm mt-1">{errors.country}</p>}
              </div>

              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-2">
                  –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ *
                </label>
                <select
                  name="bankName"
                  value={formData.bankName}
                  onChange={handleChange}
                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.bankName ? 'border-red-500' : 'border-gray-300'}`}
                  required
                >
                  {countriesAndBanks[formData.country]?.banks.map((bank, index) => (
                    <option key={index} value={bank}>
                      {bank}
                    </option>
                  ))}
                </select>
                {errors.bankName && <p className="text-red-500 text-sm mt-1">{errors.bankName}</p>}
              </div>

              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-2">
                  –ù–æ–º–µ—Ä —Å—á–µ—Ç–∞ *
                </label>
                <input
                  type="text"
                  name="accountNumber"
                  value={formData.accountNumber}
                  onChange={handleChange}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞"
                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.accountNumber ? 'border-red-500' : 'border-gray-300'}`}
                  required
                />
                {errors.accountNumber && <p className="text-red-500 text-sm mt-1">{errors.accountNumber}</p>}
              </div>

              {errors.submit && (
                <div className="mb-4 p-4 bg-red-50 border border-red-200 rounded-lg">
                  <p className="text-red-600">{errors.submit}</p>
                </div>
              )}

                <button
                type="submit"
                disabled={loading}
                className="w-full bg-blue-600 hover:bg-blue-700 text-white py-4 rounded-lg text-lg font-semibold transition disabled:opacity-50"
              >
                {loading ? '–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ ‚Üí'}
              </button>
            </form>
          </div>
        )}

        {/* Step 2: –í—ã–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–æ–≤ */}
        {step === 2 && (
          <div className="bg-white rounded-2xl shadow-2xl p-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">–®–∞–≥ 2: –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç</h2>
            <p className="text-gray-600 text-center mb-8">
              –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –º—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏ 3 –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞–π–º–∞:
            </p>

            {/* –ü—Ä–æ–¥—É–∫—Ç—ã */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
              <div 
                className="border-2 border-gray-200 rounded-lg p-6 hover:border-blue-500 cursor-pointer transition transform hover:scale-105"
                onClick={() => handleProductSelect({
                  id: 1,
                  name: '–≠–∫—Å–ø—Ä–µ—Å—Å –∑–∞–π–º',
                  amount: formData.amount,
                  term: formData.termDays,
                  rate: 2.0,
                  totalAmount: (formData.amount * 1.6).toFixed(2),
                  description: '–ë—ã—Å—Ç—Ä–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è'
                })}
              >
                <h4 className="text-xl font-bold text-blue-800 mb-3">–≠–∫—Å–ø—Ä–µ—Å—Å –∑–∞–π–º</h4>
                <p className="text-gray-600 mb-4">–ë—ã—Å—Ç—Ä–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è</p>
                <div className="space-y-2 text-sm">
                  <p><span className="font-semibold">–°—É–º–º–∞:</span> ${formData.amount}</p>
                  <p><span className="font-semibold">–°—Ä–æ–∫:</span> {formData.termDays} –¥–Ω–µ–π</p>
                  <p><span className="font-semibold">–°—Ç–∞–≤–∫–∞:</span> 2.0% –≤ –¥–µ–Ω—å</p>
                  <p className="text-lg font-bold text-green-600">–ö –≤–æ–∑–≤—Ä–∞—Ç—É: ${(formData.amount * 1.6).toFixed(2)}</p>
                </div>
                <button className="mt-4 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg text-sm font-semibold transition">
                  –í—ã–±—Ä–∞—Ç—å
                </button>
              </div>

              <div 
                className="border-2 border-gray-200 rounded-lg p-6 hover:border-green-500 cursor-pointer transition transform hover:scale-105"
                onClick={() => handleProductSelect({
                  id: 2,
                  name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç',
                  amount: formData.amount,
                  term: formData.termDays,
                  rate: 1.8,
                  totalAmount: (formData.amount * 1.54).toFixed(2),
                  description: '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞'
                })}
              >
                <h4 className="text-xl font-bold text-green-800 mb-3">–°—Ç–∞–Ω–¥–∞—Ä—Ç</h4>
                <p className="text-gray-600 mb-4">–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞</p>
                <div className="space-y-2 text-sm">
                  <p><span className="font-semibold">–°—É–º–º–∞:</span> ${formData.amount}</p>
                  <p><span className="font-semibold">–°—Ä–æ–∫:</span> {formData.termDays} –¥–Ω–µ–π</p>
                  <p><span className="font-semibold">–°—Ç–∞–≤–∫–∞:</span> 1.8% –≤ –¥–µ–Ω—å</p>
                  <p className="text-lg font-bold text-green-600">–ö –≤–æ–∑–≤—Ä–∞—Ç—É: ${(formData.amount * 1.54).toFixed(2)}</p>
                </div>
                <button className="mt-4 w-full bg-green-600 hover:bg-green-700 text-white py-2 rounded-lg text-sm font-semibold transition">
                  –í—ã–±—Ä–∞—Ç—å
                </button>
              </div>

              <div 
                className="border-2 border-gray-200 rounded-lg p-6 hover:border-purple-500 cursor-pointer transition transform hover:scale-105"
                onClick={() => handleProductSelect({
                  id: 3,
                  name: '–ú–∞–∫—Å–∏–º—É–º',
                  amount: formData.amount,
                  term: formData.termDays,
                  rate: 1.5,
                  totalAmount: (formData.amount * 1.45).toFixed(2),
                  description: '–í—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤'
                })}
              >
                <h4 className="text-xl font-bold text-purple-800 mb-3">–ú–∞–∫—Å–∏–º—É–º</h4>
                <p className="text-gray-600 mb-4">–í—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
                <div className="space-y-2 text-sm">
                  <p><span className="font-semibold">–°—É–º–º–∞:</span> ${formData.amount}</p>
                  <p><span className="font-semibold">–°—Ä–æ–∫:</span> {formData.termDays} –¥–Ω–µ–π</p>
                  <p><span className="font-semibold">–°—Ç–∞–≤–∫–∞:</span> 1.5% –≤ –¥–µ–Ω—å</p>
                  <p className="text-lg font-bold text-green-600">–ö –≤–æ–∑–≤—Ä–∞—Ç—É: ${(formData.amount * 1.45).toFixed(2)}</p>
                </div>
                <button className="mt-4 w-full bg-purple-600 hover:bg-purple-700 text-white py-2 rounded-lg text-sm font-semibold transition">
                  –í—ã–±—Ä–∞—Ç—å
                </button>
              </div>
            </div>
          </div>
        )}

        {/* Step 3: –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞ */}
        {step === 3 && selectedProduct && (
          <div className="bg-white rounded-2xl shadow-2xl p-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">–®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞</h2>
            
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ */}
            <div className="bg-blue-50 rounded-lg p-6 mb-6">
              <h3 className="text-xl font-semibold text-blue-800 mb-4">–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç:</h3>
              <div className="grid grid-cols-2 gap-4 text-sm">
                <div><span className="font-medium">–ü—Ä–æ–¥—É–∫—Ç:</span> {selectedProduct.name}</div>
                <div><span className="font-medium">–°—É–º–º–∞ –∑–∞–π–º–∞:</span> ${selectedProduct.amount}</div>
                <div><span className="font-medium">–°—Ä–æ–∫:</span> {selectedProduct.term} –¥–Ω–µ–π</div>
                <div><span className="font-medium">–°—Ç–∞–≤–∫–∞:</span> {selectedProduct.rate}% –≤ –¥–µ–Ω—å</div>
                <div className="col-span-2"><span className="font-medium">–ö –≤–æ–∑–≤—Ä–∞—Ç—É:</span> ${selectedProduct.totalAmount}</div>
              </div>
            </div>

            <div className="text-center">
              <div className="text-6xl mb-6">üîê</div>
              <h3 className="text-xl font-bold text-gray-800 mb-4">–°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞</h3>
              <p className="text-gray-600 mb-6">
                –ú—ã —Å–æ–∑–¥–∞–¥–∏–º –¥–ª—è –≤–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞–π–º–∞.
                –ö–æ—à–µ–ª–µ–∫ –±—É–¥–µ—Ç –∑–∞—â–∏—â–µ–Ω —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è.
              </p>
              
              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
                <p className="text-yellow-800">
                  ‚ö†Ô∏è <strong>–í–∞–∂–Ω–æ:</strong> –ó–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ –≤–∑–∏–º–∞–µ—Ç—Å—è –∫–æ–º–∏—Å—Å–∏—è $1 –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.
                </p>
              </div>

              <button
                onClick={handleCryptoWalletCreated}
                className="bg-blue-600 hover:bg-blue-700 text-white py-4 px-8 rounded-lg text-lg font-semibold transition"
              >
                –°–æ–∑–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫ –∏ –æ–ø–ª–∞—Ç–∏—Ç—å $1
              </button>
            </div>
          </div>
        )}

        {/* Step 4: –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è */}
        {step === 4 && (
          <div className="bg-white rounded-2xl shadow-2xl p-8 text-center">
            <div className="mb-8">
              <div className="text-6xl mb-4">‚è≥</div>
              <h2 className="text-3xl font-bold text-gray-800 mb-4">–û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è</h2>
              <p className="text-gray-600 text-lg">
                –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ –≤–∞—à–µ–º—É –∑–∞–π–º—É...
              </p>
            </div>

            <div className="bg-blue-50 rounded-lg p-6 mb-8">
              <h3 className="text-xl font-semibold text-blue-800 mb-4">–ü—Ä–æ–≤–µ—Ä—è–µ–º:</h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                <div className="flex items-center text-gray-700">
                  <span className="text-green-500 mr-2">‚úî</span> –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
                </div>
                <div className="flex items-center text-gray-700">
                  <span className="text-green-500 mr-2">‚úî</span> –î–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã
                </div>
                <div className="flex items-center text-gray-700">
                  <span className="text-green-500 mr-2">‚úî</span> –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
                </div>
                <div className="flex items-center text-gray-700">
                  <span className="text-green-500 mr-2">‚úî</span> –°–∫–æ—Ä–∏–Ω–≥-–º–æ–¥–µ–ª—å
                </div>
                <div className="flex items-center text-gray-700">
                  <span className="text-green-500 mr-2">‚úî</span> –†–∏—Å–∫-–∞–Ω–∞–ª–∏–∑
                </div>
                <div className="flex items-center text-gray-700">
                  <span className="text-green-500 mr-2">‚úî</span> –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                </div>
              </div>
            </div>

            <div className="mb-8">
              <div className="bg-gray-200 rounded-full h-3 mb-4">
                <div className="bg-blue-600 h-3 rounded-full animate-pulse" style={{width: '90%'}}></div>
              </div>
              <p className="text-gray-600">–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–∞ 90%</p>
            </div>

            {loading && (
              <p className="text-blue-600 font-semibold text-lg">–ü—Ä–∏–Ω–∏–º–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ...</p>
            )}
          </div>
        )}

        {/* Step 5: –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ */}
        {step === 5 && (
          <div className="bg-white p-8 rounded-2xl shadow-xl text-center">
            {finalDecision === 'approved' ? (
              <>
                <div className="text-green-500 text-7xl mb-6">üéâ</div>
                <h3 className="text-3xl font-bold text-gray-800 mb-4">–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!</h3>
                <p className="text-gray-600 text-lg mb-8">
                  –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–π–º —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∞.
                  –°—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –≤–∞—à –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
                </p>
                <button
                  onClick={() => navigate('/personal-account')}
                  className="inline-block bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg transition duration-300"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                </button>
              </>
            ) : (
              <>
                <div className="text-red-500 text-7xl mb-6">‚ùå</div>
                <h3 className="text-3xl font-bold text-gray-800 mb-4">–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞</h3>
                <p className="text-gray-600 text-lg mb-8">
                  –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–π–º –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.
                  –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.
                </p>
            <button
                  onClick={() => setStep(1)}
                  className="inline-block bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition duration-300"
            >
                  –ü–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É
            </button>
              </>
            )}
          </div>
        )}
      </div>
    </div>
  )
}

export default ApplicationPage