import { useState } from 'react'
import { useLocation, useNavigate } from 'react-router-dom'
import axios from 'axios'

function ApplicationPage() {
  const location = useLocation()
  const navigate = useNavigate()
  
  const [step, setStep] = useState(1)
  const [loading, setLoading] = useState(false)
  const [products, setProducts] = useState([])
  const [selectedProduct, setSelectedProduct] = useState(null)
  
  const [formData, setFormData] = useState({
    amount: location.state?.amount || 1000,
    termDays: location.state?.term || 30,
    phoneNumber: '',
    loanPurpose: '',
    firstName: '',
    lastName: '',
    email: '',
    bankName: '',
    accountNumber: ''
  })

  const [errors, setErrors] = useState({})

  const handleChange = (e) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[name]) {
      setErrors(prev => ({ ...prev, [name]: '' }))
    }
  }

  const validateStep1 = () => {
    const newErrors = {}
    
    if (formData.amount < 10 || formData.amount > 10000) {
      newErrors.amount = '–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç $10 –¥–æ $10,000'
    }
    
    if (formData.termDays < 1 || formData.termDays > 365) {
      newErrors.termDays = '–°—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 365 –¥–Ω–µ–π'
    }
    
    if (!formData.phoneNumber || formData.phoneNumber.length < 10) {
      newErrors.phoneNumber = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    }
    
    if (!formData.loanPurpose) {
      newErrors.loanPurpose = '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –∑–∞–π–º–∞'
    }

    setErrors(newErrors)
    return Object.keys(newErrors).length === 0
  }

  const handleStep1Submit = async (e) => {
    e.preventDefault()
    
    if (!validateStep1()) {
      return
    }

    setLoading(true)

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø—Ä–µ—Å–∫–æ—Ä–∏–Ω–≥
      const response = await axios.post('/api/prescoring/submit', {
        amountUsd: formData.amount,
        termDays: formData.termDays,
        phoneNumber: formData.phoneNumber,
        loanPurpose: formData.loanPurpose
      })

      if (response.data && response.data.products) {
        setProducts(response.data.products)
        setStep(2)
      }
    } catch (error) {
      setErrors({ submit: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' })
    } finally {
      setLoading(false)
    }
  }

  const handleProductSelect = (product) => {
    setSelectedProduct(product)
    setStep(3)
  }

  const validateStep3 = () => {
    const newErrors = {}
    
    if (!formData.firstName || formData.firstName.length < 2) {
      newErrors.firstName = '–í–≤–µ–¥–∏—Ç–µ –∏–º—è'
    }
    
    if (!formData.lastName || formData.lastName.length < 2) {
      newErrors.lastName = '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é'
    }
    
    if (!formData.email || !formData.email.includes('@')) {
      newErrors.email = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'
    }
    
    if (!formData.bankName) {
      newErrors.bankName = '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞'
    }
    
    if (!formData.accountNumber || formData.accountNumber.length < 10) {
      newErrors.accountNumber = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞'
    }

    setErrors(newErrors)
    return Object.keys(newErrors).length === 0
  }

  const handleFinalSubmit = async (e) => {
    e.preventDefault()
    
    if (!validateStep3()) {
      return
    }

    setLoading(true)

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—É—é –∑–∞—è–≤–∫—É —Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
      const response = await axios.post('/api/verification/submit', {
        ...formData,
        productId: selectedProduct.id,
        sessionId: products[0]?.sessionId // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ sessionId –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
      })

      if (response.data.success) {
        setStep(4)
      }
    } catch (error) {
      setErrors({ submit: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' })
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="container mx-auto px-4 py-12">
      <div className="max-w-3xl mx-auto">
        <h1 className="text-4xl font-bold text-white text-center mb-8">
          –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–π–º üìù
        </h1>

        {/* Progress bar */}
        <div className="bg-white rounded-lg shadow-lg p-4 mb-8">
          <div className="flex justify-between items-center">
            <div className={`flex items-center ${step >= 1 ? 'text-blue-600' : 'text-gray-400'}`}>
              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${step >= 1 ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}>
                1
              </div>
              <span className="ml-2 font-semibold hidden md:inline">–ê–Ω–∫–µ—Ç–∞</span>
            </div>
            <div className={`flex-1 h-1 mx-4 ${step >= 2 ? 'bg-blue-600' : 'bg-gray-300'}`}></div>
            
            <div className={`flex items-center ${step >= 2 ? 'text-blue-600' : 'text-gray-400'}`}>
              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${step >= 2 ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}>
                2
              </div>
              <span className="ml-2 font-semibold hidden md:inline">–ü—Ä–æ–¥—É–∫—Ç—ã</span>
            </div>
            <div className={`flex-1 h-1 mx-4 ${step >= 3 ? 'bg-blue-600' : 'bg-gray-300'}`}></div>
            
            <div className={`flex items-center ${step >= 3 ? 'text-blue-600' : 'text-gray-400'}`}>
              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${step >= 3 ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}>
                3
              </div>
              <span className="ml-2 font-semibold hidden md:inline">–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è</span>
            </div>
            <div className={`flex-1 h-1 mx-4 ${step >= 4 ? 'bg-blue-600' : 'bg-gray-300'}`}></div>
            
            <div className={`flex items-center ${step >= 4 ? 'text-green-600' : 'text-gray-400'}`}>
              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${step >= 4 ? 'bg-green-600 text-white' : 'bg-gray-300'}`}>
                ‚úì
              </div>
              <span className="ml-2 font-semibold hidden md:inline">–ì–æ—Ç–æ–≤–æ</span>
            </div>
          </div>
        </div>

        {/* Step 1: –ê–Ω–∫–µ—Ç–∞ */}
        {step === 1 && (
          <div className="bg-white rounded-2xl shadow-2xl p-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-6">–®–∞–≥ 1: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <form onSubmit={handleStep1Submit}>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label className="block text-gray-700 font-semibold mb-2">
                    –°—É–º–º–∞ –∑–∞–π–º–∞ ($) *
                  </label>
                  <input
                    type="number"
                    name="amount"
                    value={formData.amount}
                    onChange={handleChange}
                    min="10"
                    max="10000"
                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.amount ? 'border-red-500' : 'border-gray-300'}`}
                    required
                  />
                  {errors.amount && <p className="text-red-500 text-sm mt-1">{errors.amount}</p>}
                </div>

                <div>
                  <label className="block text-gray-700 font-semibold mb-2">
                    –°—Ä–æ–∫ (–¥–Ω–∏) *
                  </label>
                  <input
                    type="number"
                    name="termDays"
                    value={formData.termDays}
                    onChange={handleChange}
                    min="1"
                    max="365"
                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.termDays ? 'border-red-500' : 'border-gray-300'}`}
                    required
                  />
                  {errors.termDays && <p className="text-red-500 text-sm mt-1">{errors.termDays}</p>}
                </div>
              </div>

              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-2">
                  –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *
                </label>
                <input
                  type="tel"
                  name="phoneNumber"
                  value={formData.phoneNumber}
                  onChange={handleChange}
                  placeholder="+1 (555) 123-4567"
                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.phoneNumber ? 'border-red-500' : 'border-gray-300'}`}
                  required
                />
                {errors.phoneNumber && <p className="text-red-500 text-sm mt-1">{errors.phoneNumber}</p>}
              </div>

              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-2">
                  –¶–µ–ª—å –∑–∞–π–º–∞ *
                </label>
                <select
                  name="loanPurpose"
                  value={formData.loanPurpose}
                  onChange={handleChange}
                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.loanPurpose ? 'border-red-500' : 'border-gray-300'}`}
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –∑–∞–π–º–∞</option>
                  <option value="–ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥">üõí –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥</option>
                  <option value="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã">üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã</option>
                  <option value="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ">üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
                  <option value="–†–µ–º–æ–Ω—Ç –¥–æ–º–∞/–∫–≤–∞—Ä—Ç–∏—Ä—ã">üè† –†–µ–º–æ–Ω—Ç –¥–æ–º–∞/–∫–≤–∞—Ä—Ç–∏—Ä—ã</option>
                  <option value="–ü–æ–∫—É–ø–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è">üöó –ü–æ–∫—É–ø–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è</option>
                  <option value="–°–≤–∞–¥—å–±–∞">üíí –°–≤–∞–¥—å–±–∞</option>
                  <option value="–û—Ç–ø—É—Å–∫/–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ">‚úàÔ∏è –û—Ç–ø—É—Å–∫/–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ</option>
                  <option value="–ë–∏–∑–Ω–µ—Å-–Ω—É–∂–¥—ã">üíº –ë–∏–∑–Ω–µ—Å-–Ω—É–∂–¥—ã</option>
                  <option value="–ü–æ–≥–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –¥–æ–ª–≥–æ–≤">üí≥ –ü–æ–≥–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –¥–æ–ª–≥–æ–≤</option>
                  <option value="–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã">‚ö° –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã</option>
                  <option value="–ü–æ–∫—É–ø–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏">üì± –ü–æ–∫—É–ø–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏</option>
                  <option value="–î—Ä—É–≥–æ–µ">üìù –î—Ä—É–≥–æ–µ</option>
                </select>
                {errors.loanPurpose && <p className="text-red-500 text-sm mt-1">{errors.loanPurpose}</p>}
              </div>

              {errors.submit && (
                <div className="mb-4 p-4 bg-red-50 border border-red-200 rounded-lg">
                  <p className="text-red-600">{errors.submit}</p>
                </div>
              )}

              <button
                type="submit"
                disabled={loading}
                className="w-full bg-blue-600 hover:bg-blue-700 text-white py-4 rounded-lg text-lg font-semibold transition disabled:opacity-50"
              >
                {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚Üí'}
              </button>
            </form>
          </div>
        )}

        {/* Step 2: –í—ã–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ */}
        {step === 2 && (
          <div className="bg-white rounded-2xl shadow-2xl p-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-6">–®–∞–≥ 2: –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç</h2>
            <p className="text-gray-600 mb-6">–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –º—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:</p>
            
            <div className="space-y-4">
              {products.length > 0 ? (
                products.map((product, index) => (
                  <div
                    key={index}
                    className="border-2 border-gray-200 rounded-lg p-6 hover:border-blue-500 cursor-pointer transition"
                    onClick={() => handleProductSelect(product)}
                  >
                    <div className="flex justify-between items-center">
                      <div>
                        <h3 className="text-xl font-bold text-gray-800">{product.name || `–ü—Ä–æ–¥—É–∫—Ç ${index + 1}`}</h3>
                        <p className="text-gray-600 mt-2">
                          –°—É–º–º–∞: ${product.amount} | –°—Ä–æ–∫: {product.term} –¥–Ω–µ–π | –°—Ç–∞–≤–∫–∞: {product.rate}%
                        </p>
                        <p className="text-lg font-semibold text-green-600 mt-2">
                          –ö –≤–æ–∑–≤—Ä–∞—Ç—É: ${product.totalAmount}
                        </p>
                      </div>
                      <div className="text-3xl">‚Üí</div>
                    </div>
                  </div>
                ))
              ) : (
                <div className="text-center py-8">
                  <p className="text-gray-600">–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã...</p>
                </div>
              )}
            </div>

            <button
              onClick={() => setStep(1)}
              className="mt-6 w-full bg-gray-300 hover:bg-gray-400 text-gray-800 py-3 rounded-lg font-semibold transition"
            >
              ‚Üê –ù–∞–∑–∞–¥
            </button>
          </div>
        )}

        {/* Step 3: –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è */}
        {step === 3 && (
          <div className="bg-white rounded-2xl shadow-2xl p-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-6">–®–∞–≥ 3: –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—á–µ—Ç–∞</h2>
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
              <p className="text-yellow-800">
                ‚ö†Ô∏è –î–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞ —Å –Ω–µ–≥–æ –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω–∞ —Å—É–º–º–∞ $1. 
                –≠—Ç–∞ —Å—É–º–º–∞ –±—É–¥–µ—Ç –∑–∞—á—Ç–µ–Ω–∞ –≤ —Å—á–µ—Ç –ø–æ–≥–∞—à–µ–Ω–∏—è –∑–∞–π–º–∞.
              </p>
            </div>

            <form onSubmit={handleFinalSubmit}>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label className="block text-gray-700 font-semibold mb-2">
                    –ò–º—è *
                  </label>
                  <input
                    type="text"
                    name="firstName"
                    value={formData.firstName}
                    onChange={handleChange}
                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.firstName ? 'border-red-500' : 'border-gray-300'}`}
                    required
                  />
                  {errors.firstName && <p className="text-red-500 text-sm mt-1">{errors.firstName}</p>}
                </div>

                <div>
                  <label className="block text-gray-700 font-semibold mb-2">
                    –§–∞–º–∏–ª–∏—è *
                  </label>
                  <input
                    type="text"
                    name="lastName"
                    value={formData.lastName}
                    onChange={handleChange}
                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.lastName ? 'border-red-500' : 'border-gray-300'}`}
                    required
                  />
                  {errors.lastName && <p className="text-red-500 text-sm mt-1">{errors.lastName}</p>}
                </div>
              </div>

              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-2">
                  Email *
                </label>
                <input
                  type="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  placeholder="your@email.com"
                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.email ? 'border-red-500' : 'border-gray-300'}`}
                  required
                />
                {errors.email && <p className="text-red-500 text-sm mt-1">{errors.email}</p>}
              </div>

              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-2">
                  –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ *
                </label>
                <input
                  type="text"
                  name="bankName"
                  value={formData.bankName}
                  onChange={handleChange}
                  placeholder="Bank of America"
                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.bankName ? 'border-red-500' : 'border-gray-300'}`}
                  required
                />
                {errors.bankName && <p className="text-red-500 text-sm mt-1">{errors.bankName}</p>}
              </div>

              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-2">
                  –ù–æ–º–µ—Ä —Å—á–µ—Ç–∞ *
                </label>
                <input
                  type="text"
                  name="accountNumber"
                  value={formData.accountNumber}
                  onChange={handleChange}
                  placeholder="1234567890"
                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 ${errors.accountNumber ? 'border-red-500' : 'border-gray-300'}`}
                  required
                />
                {errors.accountNumber && <p className="text-red-500 text-sm mt-1">{errors.accountNumber}</p>}
              </div>

              {errors.submit && (
                <div className="mb-4 p-4 bg-red-50 border border-red-200 rounded-lg">
                  <p className="text-red-600">{errors.submit}</p>
                </div>
              )}

              <div className="flex gap-4">
                <button
                  type="button"
                  onClick={() => setStep(2)}
                  className="flex-1 bg-gray-300 hover:bg-gray-400 text-gray-800 py-4 rounded-lg font-semibold transition"
                >
                  ‚Üê –ù–∞–∑–∞–¥
                </button>
                <button
                  type="submit"
                  disabled={loading}
                  className="flex-1 bg-green-600 hover:bg-green-700 text-white py-4 rounded-lg text-lg font-semibold transition disabled:opacity-50"
                >
                  {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'}
                </button>
              </div>
            </form>
          </div>
        )}

        {/* Step 4: –£—Å–ø–µ—Ö */}
        {step === 4 && (
          <div className="bg-white rounded-2xl shadow-2xl p-8 text-center">
            <div className="text-6xl mb-6">üéâ</div>
            <h2 className="text-3xl font-bold text-gray-800 mb-4">–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h2>
            <p className="text-lg text-gray-600 mb-6">
              –ú—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ 5-10 –º–∏–Ω—É—Ç. 
              –î–µ–Ω—å–≥–∏ –ø–æ—Å—Ç—É–ø—è—Ç –Ω–∞ –≤–∞—à —Å—á–µ—Ç –ø–æ—Å–ª–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.
            </p>
            <div className="bg-blue-50 rounded-lg p-6 mb-6">
              <p className="text-gray-700">
                –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ –≤–∞—à email: <strong>{formData.email}</strong>
              </p>
            </div>
            <button
              onClick={() => navigate('/')}
              className="bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 rounded-lg text-lg font-semibold transition"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            </button>
          </div>
        )}
      </div>
    </div>
  )
}

export default ApplicationPage


